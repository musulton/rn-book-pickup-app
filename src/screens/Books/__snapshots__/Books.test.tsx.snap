// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Books /> should render Books correctly 1`] = `
<RCTSafeAreaView
  style={
    {
      "backgroundColor": "#FEFEFE",
      "paddingTop": 20,
    }
  }
>
  <Header />
  <RCTScrollView
    ListEmptyComponent={<EmptyState />}
    ListFooterComponent={
      <ActivityIndicator
        size="small"
      />
    }
    contentContainerStyle={false}
    data={
      [
        {
          "author": "author",
          "edition": "edition",
          "title": "title",
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    initialNumToRender={10}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={[]}
    testID="bookList"
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": false,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "display": "flex",
              "flexDirection": "row",
              "marginVertical": 10,
              "opacity": 1,
              "paddingHorizontal": 10,
            }
          }
        >
          <View
            style={
              {
                "marginRight": 5,
                "resizeMode": "stretch",
              }
            }
          >
            <Image
              source={
                {
                  "uri": undefined,
                }
              }
              style={
                {
                  "borderRadius": 6,
                  "height": 100,
                  "resizeMode": "cover",
                  "width": 70,
                }
              }
            />
          </View>
          <View
            style={
              {
                "alignContent": "center",
                "display": "flex",
                "flex": 1,
                "justifyContent": "center",
                "marginLeft": 10,
              }
            }
          >
            <Text
              numberOfLines={2}
              style={
                {
                  "fontSize": 18,
                  "fontWeight": "500",
                }
              }
            >
              title
            </Text>
            <Text
              numberOfLines={1}
              style={
                {
                  "color": "#64676D",
                  "marginVertical": 5,
                }
              }
            >
              author
            </Text>
            <Text
              numberOfLines={1}
              style={
                {
                  "fontSize": 16,
                  "fontWeight": "500",
                }
              }
            >
              edition
            </Text>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
      >
        <ActivityIndicator
          size="small"
        />
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;

exports[`<Books /> should render History correctly when empty state 1`] = `
<RCTSafeAreaView
  style={
    {
      "backgroundColor": "#FEFEFE",
      "paddingTop": 20,
    }
  }
>
  <Header />
  <RCTScrollView
    ListEmptyComponent={<EmptyState />}
    ListFooterComponent={null}
    contentContainerStyle={
      {
        "backgroundColor": "#FEFEFE",
        "display": "flex",
        "flex": 1,
      }
    }
    data={[]}
    getItem={[Function]}
    getItemCount={[Function]}
    initialNumToRender={10}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={[]}
    testID="bookList"
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <EmptyState
        onLayout={[Function]}
      />
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;
